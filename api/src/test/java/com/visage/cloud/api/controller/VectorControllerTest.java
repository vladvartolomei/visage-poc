package com.visage.cloud.api.controller;

import com.fasterxml.jackson.core.JsonProcessingException;
import org.joda.time.DateTime;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Random;
import java.util.StringJoiner;
import java.util.stream.IntStream;

import static org.junit.Assert.assertEquals;


@RunWith(SpringRunner.class)
public class VectorControllerTest {

    @InjectMocks
    private VectorController vectorController;

    @Test
    public void testEntityGeneration() throws JsonProcessingException {

        String dimensions = vectorController.getRandomDimensions();
        assertEquals("zzz",dimensions);
    }

    @Test
    public void testMapping(){
        StringJoiner sj = new StringJoiner(",\n");
        IntStream.range(1,256).forEach(operand ->{
                    Random r = new Random();
                    sj.add("\"D"+operand+"\":    { \"type\": \"double_range\"  }");
                }
        );

        assertEquals("zzz", sj.toString());
    }

    @Test
    public void scoreComputation(){
        StringJoiner sj = new StringJoiner(" + ", " Math.sqrt( ", ") ");
        StringJoiner sj1 = new StringJoiner(",");
        IntStream.range(1,256).forEach(value ->
                {
                    Random r = new Random();
                    double randomValue = -1 + 2 * r.nextDouble();
                    sj1.add("\"D"+value+"\":"+randomValue);
                    sj.add("Math.pow(( doc['D"+value+"'].value - params.D"+value+"), 2) ");

                }
        );
        System.out.println(sj.toString());
        System.out.println(sj1.toString());
        assertEquals("zz",sj.toString());
        assertEquals("zzz",sj1.toString());
    }

//First wrong:
//Math.sqrt( Math.pow(( D1 - doc['D1'].value), 2) + Math.pow(( D2 - doc['D2'].value), 2) + Math.pow(( D3 - doc['D3'].value), 2) + Math.pow(( D4 - doc['D4'].value), 2) + Math.pow(( D5 - doc['D5'].value), 2) + Math.pow(( D6 - doc['D6'].value), 2) + Math.pow(( D7 - doc['D7'].value), 2) + Math.pow(( D8 - doc['D8'].value), 2) + Math.pow(( D9 - doc['D9'].value), 2) + Math.pow(( D10 - doc['D10'].value), 2) + Math.pow(( D11 - doc['D11'].value), 2) + Math.pow(( D12 - doc['D12'].value), 2) + Math.pow(( D13 - doc['D13'].value), 2) + Math.pow(( D14 - doc['D14'].value), 2) + Math.pow(( D15 - doc['D15'].value), 2) + Math.pow(( D16 - doc['D16'].value), 2) + Math.pow(( D17 - doc['D17'].value), 2) + Math.pow(( D18 - doc['D18'].value), 2) + Math.pow(( D19 - doc['D19'].value), 2) + Math.pow(( D20 - doc['D20'].value), 2) + Math.pow(( D21 - doc['D21'].value), 2) + Math.pow(( D22 - doc['D22'].value), 2) + Math.pow(( D23 - doc['D23'].value), 2) + Math.pow(( D24 - doc['D24'].value), 2) + Math.pow(( D25 - doc['D25'].value), 2) + Math.pow(( D26 - doc['D26'].value), 2) + Math.pow(( D27 - doc['D27'].value), 2) + Math.pow(( D28 - doc['D28'].value), 2) + Math.pow(( D29 - doc['D29'].value), 2) + Math.pow(( D30 - doc['D30'].value), 2) + Math.pow(( D31 - doc['D31'].value), 2) + Math.pow(( D32 - doc['D32'].value), 2) + Math.pow(( D33 - doc['D33'].value), 2) + Math.pow(( D34 - doc['D34'].value), 2) + Math.pow(( D35 - doc['D35'].value), 2) + Math.pow(( D36 - doc['D36'].value), 2) + Math.pow(( D37 - doc['D37'].value), 2) + Math.pow(( D38 - doc['D38'].value), 2) + Math.pow(( D39 - doc['D39'].value), 2) + Math.pow(( D40 - doc['D40'].value), 2) + Math.pow(( D41 - doc['D41'].value), 2) + Math.pow(( D42 - doc['D42'].value), 2) + Math.pow(( D43 - doc['D43'].value), 2) + Math.pow(( D44 - doc['D44'].value), 2) + Math.pow(( D45 - doc['D45'].value), 2) + Math.pow(( D46 - doc['D46'].value), 2) + Math.pow(( D47 - doc['D47'].value), 2) + Math.pow(( D48 - doc['D48'].value), 2) + Math.pow(( D49 - doc['D49'].value), 2) + Math.pow(( D50 - doc['D50'].value), 2) + Math.pow(( D51 - doc['D51'].value), 2) + Math.pow(( D52 - doc['D52'].value), 2) + Math.pow(( D53 - doc['D53'].value), 2) + Math.pow(( D54 - doc['D54'].value), 2) + Math.pow(( D55 - doc['D55'].value), 2) + Math.pow(( D56 - doc['D56'].value), 2) + Math.pow(( D57 - doc['D57'].value), 2) + Math.pow(( D58 - doc['D58'].value), 2) + Math.pow(( D59 - doc['D59'].value), 2) + Math.pow(( D60 - doc['D60'].value), 2) + Math.pow(( D61 - doc['D61'].value), 2) + Math.pow(( D62 - doc['D62'].value), 2) + Math.pow(( D63 - doc['D63'].value), 2) + Math.pow(( D64 - doc['D64'].value), 2) + Math.pow(( D65 - doc['D65'].value), 2) + Math.pow(( D66 - doc['D66'].value), 2) + Math.pow(( D67 - doc['D67'].value), 2) + Math.pow(( D68 - doc['D68'].value), 2) + Math.pow(( D69 - doc['D69'].value), 2) + Math.pow(( D70 - doc['D70'].value), 2) + Math.pow(( D71 - doc['D71'].value), 2) + Math.pow(( D72 - doc['D72'].value), 2) + Math.pow(( D73 - doc['D73'].value), 2) + Math.pow(( D74 - doc['D74'].value), 2) + Math.pow(( D75 - doc['D75'].value), 2) + Math.pow(( D76 - doc['D76'].value), 2) + Math.pow(( D77 - doc['D77'].value), 2) + Math.pow(( D78 - doc['D78'].value), 2) + Math.pow(( D79 - doc['D79'].value), 2) + Math.pow(( D80 - doc['D80'].value), 2) + Math.pow(( D81 - doc['D81'].value), 2) + Math.pow(( D82 - doc['D82'].value), 2) + Math.pow(( D83 - doc['D83'].value), 2) + Math.pow(( D84 - doc['D84'].value), 2) + Math.pow(( D85 - doc['D85'].value), 2) + Math.pow(( D86 - doc['D86'].value), 2) + Math.pow(( D87 - doc['D87'].value), 2) + Math.pow(( D88 - doc['D88'].value), 2) + Math.pow(( D89 - doc['D89'].value), 2) + Math.pow(( D90 - doc['D90'].value), 2) + Math.pow(( D91 - doc['D91'].value), 2) + Math.pow(( D92 - doc['D92'].value), 2) + Math.pow(( D93 - doc['D93'].value), 2) + Math.pow(( D94 - doc['D94'].value), 2) + Math.pow(( D95 - doc['D95'].value), 2) + Math.pow(( D96 - doc['D96'].value), 2) + Math.pow(( D97 - doc['D97'].value), 2) + Math.pow(( D98 - doc['D98'].value), 2) + Math.pow(( D99 - doc['D99'].value), 2) + Math.pow(( D100 - doc['D100'].value), 2) + Math.pow(( D101 - doc['D101'].value), 2) + Math.pow(( D102 - doc['D102'].value), 2) + Math.pow(( D103 - doc['D103'].value), 2) + Math.pow(( D104 - doc['D104'].value), 2) + Math.pow(( D105 - doc['D105'].value), 2) + Math.pow(( D106 - doc['D106'].value), 2) + Math.pow(( D107 - doc['D107'].value), 2) + Math.pow(( D108 - doc['D108'].value), 2) + Math.pow(( D109 - doc['D109'].value), 2) + Math.pow(( D110 - doc['D110'].value), 2) + Math.pow(( D111 - doc['D111'].value), 2) + Math.pow(( D112 - doc['D112'].value), 2) + Math.pow(( D113 - doc['D113'].value), 2) + Math.pow(( D114 - doc['D114'].value), 2) + Math.pow(( D115 - doc['D115'].value), 2) + Math.pow(( D116 - doc['D116'].value), 2) + Math.pow(( D117 - doc['D117'].value), 2) + Math.pow(( D118 - doc['D118'].value), 2) + Math.pow(( D119 - doc['D119'].value), 2) + Math.pow(( D120 - doc['D120'].value), 2) + Math.pow(( D121 - doc['D121'].value), 2) + Math.pow(( D122 - doc['D122'].value), 2) + Math.pow(( D123 - doc['D123'].value), 2) + Math.pow(( D124 - doc['D124'].value), 2) + Math.pow(( D125 - doc['D125'].value), 2) + Math.pow(( D126 - doc['D126'].value), 2) + Math.pow(( D127 - doc['D127'].value), 2) + Math.pow(( D128 - doc['D128'].value), 2) + Math.pow(( D129 - doc['D129'].value), 2) + Math.pow(( D130 - doc['D130'].value), 2) + Math.pow(( D131 - doc['D131'].value), 2) + Math.pow(( D132 - doc['D132'].value), 2) + Math.pow(( D133 - doc['D133'].value), 2) + Math.pow(( D134 - doc['D134'].value), 2) + Math.pow(( D135 - doc['D135'].value), 2) + Math.pow(( D136 - doc['D136'].value), 2) + Math.pow(( D137 - doc['D137'].value), 2) + Math.pow(( D138 - doc['D138'].value), 2) + Math.pow(( D139 - doc['D139'].value), 2) + Math.pow(( D140 - doc['D140'].value), 2) + Math.pow(( D141 - doc['D141'].value), 2) + Math.pow(( D142 - doc['D142'].value), 2) + Math.pow(( D143 - doc['D143'].value), 2) + Math.pow(( D144 - doc['D144'].value), 2) + Math.pow(( D145 - doc['D145'].value), 2) + Math.pow(( D146 - doc['D146'].value), 2) + Math.pow(( D147 - doc['D147'].value), 2) + Math.pow(( D148 - doc['D148'].value), 2) + Math.pow(( D149 - doc['D149'].value), 2) + Math.pow(( D150 - doc['D150'].value), 2) + Math.pow(( D151 - doc['D151'].value), 2) + Math.pow(( D152 - doc['D152'].value), 2) + Math.pow(( D153 - doc['D153'].value), 2) + Math.pow(( D154 - doc['D154'].value), 2) + Math.pow(( D155 - doc['D155'].value), 2) + Math.pow(( D156 - doc['D156'].value), 2) + Math.pow(( D157 - doc['D157'].value), 2) + Math.pow(( D158 - doc['D158'].value), 2) + Math.pow(( D159 - doc['D159'].value), 2) + Math.pow(( D160 - doc['D160'].value), 2) + Math.pow(( D161 - doc['D161'].value), 2) + Math.pow(( D162 - doc['D162'].value), 2) + Math.pow(( D163 - doc['D163'].value), 2) + Math.pow(( D164 - doc['D164'].value), 2) + Math.pow(( D165 - doc['D165'].value), 2) + Math.pow(( D166 - doc['D166'].value), 2) + Math.pow(( D167 - doc['D167'].value), 2) + Math.pow(( D168 - doc['D168'].value), 2) + Math.pow(( D169 - doc['D169'].value), 2) + Math.pow(( D170 - doc['D170'].value), 2) + Math.pow(( D171 - doc['D171'].value), 2) + Math.pow(( D172 - doc['D172'].value), 2) + Math.pow(( D173 - doc['D173'].value), 2) + Math.pow(( D174 - doc['D174'].value), 2) + Math.pow(( D175 - doc['D175'].value), 2) + Math.pow(( D176 - doc['D176'].value), 2) + Math.pow(( D177 - doc['D177'].value), 2) + Math.pow(( D178 - doc['D178'].value), 2) + Math.pow(( D179 - doc['D179'].value), 2) + Math.pow(( D180 - doc['D180'].value), 2) + Math.pow(( D181 - doc['D181'].value), 2) + Math.pow(( D182 - doc['D182'].value), 2) + Math.pow(( D183 - doc['D183'].value), 2) + Math.pow(( D184 - doc['D184'].value), 2) + Math.pow(( D185 - doc['D185'].value), 2) + Math.pow(( D186 - doc['D186'].value), 2) + Math.pow(( D187 - doc['D187'].value), 2) + Math.pow(( D188 - doc['D188'].value), 2) + Math.pow(( D189 - doc['D189'].value), 2) + Math.pow(( D190 - doc['D190'].value), 2) + Math.pow(( D191 - doc['D191'].value), 2) + Math.pow(( D192 - doc['D192'].value), 2) + Math.pow(( D193 - doc['D193'].value), 2) + Math.pow(( D194 - doc['D194'].value), 2) + Math.pow(( D195 - doc['D195'].value), 2) + Math.pow(( D196 - doc['D196'].value), 2) + Math.pow(( D197 - doc['D197'].value), 2) + Math.pow(( D198 - doc['D198'].value), 2) + Math.pow(( D199 - doc['D199'].value), 2) + Math.pow(( D200 - doc['D200'].value), 2) + Math.pow(( D201 - doc['D201'].value), 2) + Math.pow(( D202 - doc['D202'].value), 2) + Math.pow(( D203 - doc['D203'].value), 2) + Math.pow(( D204 - doc['D204'].value), 2) + Math.pow(( D205 - doc['D205'].value), 2) + Math.pow(( D206 - doc['D206'].value), 2) + Math.pow(( D207 - doc['D207'].value), 2) + Math.pow(( D208 - doc['D208'].value), 2) + Math.pow(( D209 - doc['D209'].value), 2) + Math.pow(( D210 - doc['D210'].value), 2) + Math.pow(( D211 - doc['D211'].value), 2) + Math.pow(( D212 - doc['D212'].value), 2) + Math.pow(( D213 - doc['D213'].value), 2) + Math.pow(( D214 - doc['D214'].value), 2) + Math.pow(( D215 - doc['D215'].value), 2) + Math.pow(( D216 - doc['D216'].value), 2) + Math.pow(( D217 - doc['D217'].value), 2) + Math.pow(( D218 - doc['D218'].value), 2) + Math.pow(( D219 - doc['D219'].value), 2) + Math.pow(( D220 - doc['D220'].value), 2) + Math.pow(( D221 - doc['D221'].value), 2) + Math.pow(( D222 - doc['D222'].value), 2) + Math.pow(( D223 - doc['D223'].value), 2) + Math.pow(( D224 - doc['D224'].value), 2) + Math.pow(( D225 - doc['D225'].value), 2) + Math.pow(( D226 - doc['D226'].value), 2) + Math.pow(( D227 - doc['D227'].value), 2) + Math.pow(( D228 - doc['D228'].value), 2) + Math.pow(( D229 - doc['D229'].value), 2) + Math.pow(( D230 - doc['D230'].value), 2) + Math.pow(( D231 - doc['D231'].value), 2) + Math.pow(( D232 - doc['D232'].value), 2) + Math.pow(( D233 - doc['D233'].value), 2) + Math.pow(( D234 - doc['D234'].value), 2) + Math.pow(( D235 - doc['D235'].value), 2) + Math.pow(( D236 - doc['D236'].value), 2) + Math.pow(( D237 - doc['D237'].value), 2) + Math.pow(( D238 - doc['D238'].value), 2) + Math.pow(( D239 - doc['D239'].value), 2) + Math.pow(( D240 - doc['D240'].value), 2) + Math.pow(( D241 - doc['D241'].value), 2) + Math.pow(( D242 - doc['D242'].value), 2) + Math.pow(( D243 - doc['D243'].value), 2) + Math.pow(( D244 - doc['D244'].value), 2) + Math.pow(( D245 - doc['D245'].value), 2) + Math.pow(( D246 - doc['D246'].value), 2) + Math.pow(( D247 - doc['D247'].value), 2) + Math.pow(( D248 - doc['D248'].value), 2) + Math.pow(( D249 - doc['D249'].value), 2) + Math.pow(( D250 - doc['D250'].value), 2) + Math.pow(( D251 - doc['D251'].value), 2) + Math.pow(( D252 - doc['D252'].value), 2) + Math.pow(( D253 - doc['D253'].value), 2) + Math.pow(( D254 - doc['D254'].value), 2) + Math.pow(( D255 - doc['D255'].value), 2))
//255 properties
//Math.sqrt( Math.pow(( doc['D1'].value), 2) - 0.18181460030954089 + Math.pow(( doc['D2'].value), 2) - -0.2407487023800543 + Math.pow(( doc['D3'].value), 2) - -0.17269876790140914 + Math.pow(( doc['D4'].value), 2) - -0.4601888044233047 + Math.pow(( doc['D5'].value), 2) - 0.2749519587073259 + Math.pow(( doc['D6'].value), 2) - -0.04541908339366296 + Math.pow(( doc['D7'].value), 2) - 0.6685002129829198 + Math.pow(( doc['D8'].value), 2) - 0.1541373349880848 + Math.pow(( doc['D9'].value), 2) - -0.126085942161694 + Math.pow(( doc['D10'].value), 2) - -0.8209883917040623 + Math.pow(( doc['D11'].value), 2) - 0.9815700598211288 + Math.pow(( doc['D12'].value), 2) - -0.13795734661574133 + Math.pow(( doc['D13'].value), 2) - -0.4041544717542569 + Math.pow(( doc['D14'].value), 2) - 0.007150145187533763 + Math.pow(( doc['D15'].value), 2) - -0.5377812373049768 + Math.pow(( doc['D16'].value), 2) - 0.8153562457960151 + Math.pow(( doc['D17'].value), 2) - -0.5314269482607967 + Math.pow(( doc['D18'].value), 2) - 0.5762505669817053 + Math.pow(( doc['D19'].value), 2) - -0.7064420632648589 + Math.pow(( doc['D20'].value), 2) - 0.1048560433275898 + Math.pow(( doc['D21'].value), 2) - 0.6053563731223388 + Math.pow(( doc['D22'].value), 2) - 0.6252629964495147 + Math.pow(( doc['D23'].value), 2) - 0.858773881741419 + Math.pow(( doc['D24'].value), 2) - 0.9807142082904914 + Math.pow(( doc['D25'].value), 2) - -0.31413626943509976 + Math.pow(( doc['D26'].value), 2) - -0.9571822273456736 + Math.pow(( doc['D27'].value), 2) - -0.48282605028585324 + Math.pow(( doc['D28'].value), 2) - 0.8983686923027976 + Math.pow(( doc['D29'].value), 2) - 0.03166394931842853 + Math.pow(( doc['D30'].value), 2) - 0.8128264868204631 + Math.pow(( doc['D31'].value), 2) - 0.037711724761683385 + Math.pow(( doc['D32'].value), 2) - 0.34559068142912897 + Math.pow(( doc['D33'].value), 2) - -0.3161084096828555 + Math.pow(( doc['D34'].value), 2) - -0.5604385826329892 + Math.pow(( doc['D35'].value), 2) - 0.6417846330443944 + Math.pow(( doc['D36'].value), 2) - 0.06529566948129029 + Math.pow(( doc['D37'].value), 2) - -0.2545955814787344 + Math.pow(( doc['D38'].value), 2) - 0.5116589984876878 + Math.pow(( doc['D39'].value), 2) - 0.4889980653339103 + Math.pow(( doc['D40'].value), 2) - -0.06008198788671759 + Math.pow(( doc['D41'].value), 2) - -0.5939226993742717 + Math.pow(( doc['D42'].value), 2) - -0.3545837544284831 + Math.pow(( doc['D43'].value), 2) - 0.37381667264155727 + Math.pow(( doc['D44'].value), 2) - -0.06196446706882952 + Math.pow(( doc['D45'].value), 2) - -0.020495346745158738 + Math.pow(( doc['D46'].value), 2) - 0.39300190241049227 + Math.pow(( doc['D47'].value), 2) - -0.4226768645044412 + Math.pow(( doc['D48'].value), 2) - -0.6390213134623968 + Math.pow(( doc['D49'].value), 2) - -0.27541543707023175 + Math.pow(( doc['D50'].value), 2) - 0.35536589777803695 + Math.pow(( doc['D51'].value), 2) - 0.9558239123600896 + Math.pow(( doc['D52'].value), 2) - -0.16480423305281144 + Math.pow(( doc['D53'].value), 2) - -0.43554859781378963 + Math.pow(( doc['D54'].value), 2) - 0.8991373670194858 + Math.pow(( doc['D55'].value), 2) - -0.5734795487818352 + Math.pow(( doc['D56'].value), 2) - -0.019150648665533287 + Math.pow(( doc['D57'].value), 2) - 0.2147307613235685 + Math.pow(( doc['D58'].value), 2) - -0.4433015580192967 + Math.pow(( doc['D59'].value), 2) - 0.7379037376201556 + Math.pow(( doc['D60'].value), 2) - -0.14386233656606295 + Math.pow(( doc['D61'].value), 2) - 0.14781318747482586 + Math.pow(( doc['D62'].value), 2) - -0.8380616766526547 + Math.pow(( doc['D63'].value), 2) - 0.9619049469079761 + Math.pow(( doc['D64'].value), 2) - 0.756130158873652 + Math.pow(( doc['D65'].value), 2) - 0.8876531795306208 + Math.pow(( doc['D66'].value), 2) - -0.7776217686162026 + Math.pow(( doc['D67'].value), 2) - -0.5391927775003553 + Math.pow(( doc['D68'].value), 2) - 0.25080380226057386 + Math.pow(( doc['D69'].value), 2) - -0.7962655138691912 + Math.pow(( doc['D70'].value), 2) - -0.308084165678298 + Math.pow(( doc['D71'].value), 2) - 0.2530232981299898 + Math.pow(( doc['D72'].value), 2) - -0.49189261804138584 + Math.pow(( doc['D73'].value), 2) - 0.10974927176725502 + Math.pow(( doc['D74'].value), 2) - -0.6005008271579761 + Math.pow(( doc['D75'].value), 2) - 0.1198248188597526 + Math.pow(( doc['D76'].value), 2) - 0.14770546564027676 + Math.pow(( doc['D77'].value), 2) - -0.34691857327886155 + Math.pow(( doc['D78'].value), 2) - -0.6531113416474539 + Math.pow(( doc['D79'].value), 2) - -0.6216345577530891 + Math.pow(( doc['D80'].value), 2) - -0.21320924628859905 + Math.pow(( doc['D81'].value), 2) - 0.15310610469013697 + Math.pow(( doc['D82'].value), 2) - 0.6133291704150687 + Math.pow(( doc['D83'].value), 2) - 0.3285265202362575 + Math.pow(( doc['D84'].value), 2) - 0.6214943326512958 + Math.pow(( doc['D85'].value), 2) - 0.5719141978702482 + Math.pow(( doc['D86'].value), 2) - -0.5788072731610341 + Math.pow(( doc['D87'].value), 2) - 0.10399199350947486 + Math.pow(( doc['D88'].value), 2) - 0.6861057276493179 + Math.pow(( doc['D89'].value), 2) - -0.8005007409492109 + Math.pow(( doc['D90'].value), 2) - 0.3159866056644631 + Math.pow(( doc['D91'].value), 2) - -0.9976438494638393 + Math.pow(( doc['D92'].value), 2) - 0.3626039433572035 + Math.pow(( doc['D93'].value), 2) - -0.852030061098872 + Math.pow(( doc['D94'].value), 2) - 0.5029492223783745 + Math.pow(( doc['D95'].value), 2) - 0.4637756860858202 + Math.pow(( doc['D96'].value), 2) - 0.0019535286386909156 + Math.pow(( doc['D97'].value), 2) - -0.6009864509323648 + Math.pow(( doc['D98'].value), 2) - -0.006536835888640402 + Math.pow(( doc['D99'].value), 2) - -0.015590097866641894 + Math.pow(( doc['D100'].value), 2) - 0.4759559969256262 + Math.pow(( doc['D101'].value), 2) - -0.8562081694089445 + Math.pow(( doc['D102'].value), 2) - -0.175538019669508 + Math.pow(( doc['D103'].value), 2) - 0.33095429843761126 + Math.pow(( doc['D104'].value), 2) - -0.8858402746718756 + Math.pow(( doc['D105'].value), 2) - 0.9326447261501705 + Math.pow(( doc['D106'].value), 2) - -0.7953012077257777 + Math.pow(( doc['D107'].value), 2) - 0.2840581616233686 + Math.pow(( doc['D108'].value), 2) - -0.43446282607866626 + Math.pow(( doc['D109'].value), 2) - 0.11144249743957357 + Math.pow(( doc['D110'].value), 2) - 0.7037160124184485 + Math.pow(( doc['D111'].value), 2) - 0.5576468977858786 + Math.pow(( doc['D112'].value), 2) - 0.3278479591439529 + Math.pow(( doc['D113'].value), 2) - 0.7915418675902697 + Math.pow(( doc['D114'].value), 2) - -0.5367984553629737 + Math.pow(( doc['D115'].value), 2) - -0.4225639485815691 + Math.pow(( doc['D116'].value), 2) - -0.421977605213508 + Math.pow(( doc['D117'].value), 2) - 0.35192384377018016 + Math.pow(( doc['D118'].value), 2) - 0.6830374348834043 + Math.pow(( doc['D119'].value), 2) - 0.9558493625483633 + Math.pow(( doc['D120'].value), 2) - 0.24198364952609852 + Math.pow(( doc['D121'].value), 2) - -0.6602962736079778 + Math.pow(( doc['D122'].value), 2) - -0.19962361111922 + Math.pow(( doc['D123'].value), 2) - 0.7711881109475611 + Math.pow(( doc['D124'].value), 2) - 0.6870748563360072 + Math.pow(( doc['D125'].value), 2) - -0.7471840505636842 + Math.pow(( doc['D126'].value), 2) - -0.8114343888584292 + Math.pow(( doc['D127'].value), 2) - 0.6313842128403206 + Math.pow(( doc['D128'].value), 2) - -0.42786996819427525 + Math.pow(( doc['D129'].value), 2) - -0.11360854963628642 + Math.pow(( doc['D130'].value), 2) - -0.990115755530016 + Math.pow(( doc['D131'].value), 2) - 0.905099436259104 + Math.pow(( doc['D132'].value), 2) - 0.1555718749067292 + Math.pow(( doc['D133'].value), 2) - 0.4829237057851343 + Math.pow(( doc['D134'].value), 2) - 0.009970894875815262 + Math.pow(( doc['D135'].value), 2) - 0.42570079041535913 + Math.pow(( doc['D136'].value), 2) - 0.8490498977949128 + Math.pow(( doc['D137'].value), 2) - 0.2726291775766596 + Math.pow(( doc['D138'].value), 2) - 0.7810265143050228 + Math.pow(( doc['D139'].value), 2) - -0.5745544804238212 + Math.pow(( doc['D140'].value), 2) - -0.8205582101139612 + Math.pow(( doc['D141'].value), 2) - 0.2720728595042876 + Math.pow(( doc['D142'].value), 2) - 0.5982027029802957 + Math.pow(( doc['D143'].value), 2) - 0.47701904226769254 + Math.pow(( doc['D144'].value), 2) - -0.6801417148629305 + Math.pow(( doc['D145'].value), 2) - -0.047487246497250224 + Math.pow(( doc['D146'].value), 2) - 0.14056388949965837 + Math.pow(( doc['D147'].value), 2) - 0.9981288794299668 + Math.pow(( doc['D148'].value), 2) - -0.8171407779493529 + Math.pow(( doc['D149'].value), 2) - 0.38566647088400563 + Math.pow(( doc['D150'].value), 2) - 0.9106790170946639 + Math.pow(( doc['D151'].value), 2) - -0.851773163853607 + Math.pow(( doc['D152'].value), 2) - -0.25558306582967405 + Math.pow(( doc['D153'].value), 2) - 0.8174088585914299 + Math.pow(( doc['D154'].value), 2) - -0.8166229374777896 + Math.pow(( doc['D155'].value), 2) - -0.9639346341192461 + Math.pow(( doc['D156'].value), 2) - -0.9384819306098107 + Math.pow(( doc['D157'].value), 2) - -0.6727323704493817 + Math.pow(( doc['D158'].value), 2) - 0.3908153283810729 + Math.pow(( doc['D159'].value), 2) - -0.732784493524482 + Math.pow(( doc['D160'].value), 2) - 0.3029790342404226 + Math.pow(( doc['D161'].value), 2) - -0.4074600590639408 + Math.pow(( doc['D162'].value), 2) - 0.5867904278599729 + Math.pow(( doc['D163'].value), 2) - -0.23119074440217524 + Math.pow(( doc['D164'].value), 2) - -0.24223663980280352 + Math.pow(( doc['D165'].value), 2) - 0.5231202379072544 + Math.pow(( doc['D166'].value), 2) - -0.36283709552292365 + Math.pow(( doc['D167'].value), 2) - 0.5840002399535786 + Math.pow(( doc['D168'].value), 2) - 0.273717087006623 + Math.pow(( doc['D169'].value), 2) - 0.15796861832548315 + Math.pow(( doc['D170'].value), 2) - 0.038479617935278876 + Math.pow(( doc['D171'].value), 2) - -0.2086760296325627 + Math.pow(( doc['D172'].value), 2) - -0.9917071602903482 + Math.pow(( doc['D173'].value), 2) - -0.22008678574639973 + Math.pow(( doc['D174'].value), 2) - -0.7947761115757146 + Math.pow(( doc['D175'].value), 2) - 0.8448632329993906 + Math.pow(( doc['D176'].value), 2) - 0.12491992891353831 + Math.pow(( doc['D177'].value), 2) - -0.5904227503979427 + Math.pow(( doc['D178'].value), 2) - -0.493323183728416 + Math.pow(( doc['D179'].value), 2) - -0.43225071624785727 + Math.pow(( doc['D180'].value), 2) - 0.8427490361982379 + Math.pow(( doc['D181'].value), 2) - -0.48057594038558515 + Math.pow(( doc['D182'].value), 2) - -0.29442084281999215 + Math.pow(( doc['D183'].value), 2) - 0.11472286708510815 + Math.pow(( doc['D184'].value), 2) - 0.027078394201714096 + Math.pow(( doc['D185'].value), 2) - -0.05430073049338846 + Math.pow(( doc['D186'].value), 2) - 0.3401517375051486 + Math.pow(( doc['D187'].value), 2) - 0.712794367794654 + Math.pow(( doc['D188'].value), 2) - -0.26114283548165074 + Math.pow(( doc['D189'].value), 2) - 0.8265887901867379 + Math.pow(( doc['D190'].value), 2) - 0.7944361875731472 + Math.pow(( doc['D191'].value), 2) - 0.35045006205146567 + Math.pow(( doc['D192'].value), 2) - -0.47020461365205546 + Math.pow(( doc['D193'].value), 2) - -0.1972619856937028 + Math.pow(( doc['D194'].value), 2) - 0.2505065596720313 + Math.pow(( doc['D195'].value), 2) - -0.6099257254101895 + Math.pow(( doc['D196'].value), 2) - 0.9175727308668573 + Math.pow(( doc['D197'].value), 2) - -0.13186467544662106 + Math.pow(( doc['D198'].value), 2) - -0.36014369663553447 + Math.pow(( doc['D199'].value), 2) - 0.9249924229538022 + Math.pow(( doc['D200'].value), 2) - -0.08151550388029971 + Math.pow(( doc['D201'].value), 2) - 0.019565634135416232 + Math.pow(( doc['D202'].value), 2) - -0.7529731724857385 + Math.pow(( doc['D203'].value), 2) - -0.747474683088635 + Math.pow(( doc['D204'].value), 2) - -0.7612810466700983 + Math.pow(( doc['D205'].value), 2) - 0.266399239391087 + Math.pow(( doc['D206'].value), 2) - 0.035088847713727 + Math.pow(( doc['D207'].value), 2) - -0.6684202959247625 + Math.pow(( doc['D208'].value), 2) - -0.4589790854565756 + Math.pow(( doc['D209'].value), 2) - -0.9302580850129756 + Math.pow(( doc['D210'].value), 2) - 0.8886369342246934 + Math.pow(( doc['D211'].value), 2) - 0.18277326216265766 + Math.pow(( doc['D212'].value), 2) - 0.07221274361729058 + Math.pow(( doc['D213'].value), 2) - 0.9974530519608829 + Math.pow(( doc['D214'].value), 2) - -0.6629579123466318 + Math.pow(( doc['D215'].value), 2) - 0.7972737820453402 + Math.pow(( doc['D216'].value), 2) - 0.18629164624927674 + Math.pow(( doc['D217'].value), 2) - 0.37345165494805355 + Math.pow(( doc['D218'].value), 2) - 0.8211731810589491 + Math.pow(( doc['D219'].value), 2) - 0.46183542105731523 + Math.pow(( doc['D220'].value), 2) - -0.659306503016797 + Math.pow(( doc['D221'].value), 2) - -0.27900214472008655 + Math.pow(( doc['D222'].value), 2) - -0.7602696262780106 + Math.pow(( doc['D223'].value), 2) - -0.8194379896644612 + Math.pow(( doc['D224'].value), 2) - 0.027055430743313957 + Math.pow(( doc['D225'].value), 2) - -0.49879693539729386 + Math.pow(( doc['D226'].value), 2) - -0.35225912035010953 + Math.pow(( doc['D227'].value), 2) - -0.2702973604434531 + Math.pow(( doc['D228'].value), 2) - -0.2862566666669861 + Math.pow(( doc['D229'].value), 2) - -0.6569386438233278 + Math.pow(( doc['D230'].value), 2) - -0.6876924487710709 + Math.pow(( doc['D231'].value), 2) - -0.6623994095136314 + Math.pow(( doc['D232'].value), 2) - 0.9805358303907934 + Math.pow(( doc['D233'].value), 2) - -0.11866107657264857 + Math.pow(( doc['D234'].value), 2) - -0.5600920313515523 + Math.pow(( doc['D235'].value), 2) - 0.026367024834513586 + Math.pow(( doc['D236'].value), 2) - 0.241546260221706 + Math.pow(( doc['D237'].value), 2) - 0.27710000043083016 + Math.pow(( doc['D238'].value), 2) - 0.4885494587007444 + Math.pow(( doc['D239'].value), 2) - 0.24992820928054948 + Math.pow(( doc['D240'].value), 2) - 0.651069565873253 + Math.pow(( doc['D241'].value), 2) - -0.24509833347322396 + Math.pow(( doc['D242'].value), 2) - -0.4621231278853182 + Math.pow(( doc['D243'].value), 2) - 0.8590568209170819 + Math.pow(( doc['D244'].value), 2) - -0.5349762801263638 + Math.pow(( doc['D245'].value), 2) - 0.6674546400495089 + Math.pow(( doc['D246'].value), 2) - 0.745405801248999 + Math.pow(( doc['D247'].value), 2) - -0.022544429522815435 + Math.pow(( doc['D248'].value), 2) - -0.8767852673266867 + Math.pow(( doc['D249'].value), 2) - -0.36257198612660146 + Math.pow(( doc['D250'].value), 2) - -0.4650769189703641 + Math.pow(( doc['D251'].value), 2) - 0.5965158974493043 + Math.pow(( doc['D252'].value), 2) - -0.5842238327357876 + Math.pow(( doc['D253'].value), 2) - 0.867659029661257 + Math.pow(( doc['D254'].value), 2) - -0.5590788312605135 + Math.pow(( doc['D255'].value), 2) - -0.7118625857899807)

    public String getRandomDimensions() throws JsonProcessingException {
        StringJoiner sj = new StringJoiner(",","{","}");
        IntStream.range(1,256).forEach(operand ->{
                    Random r = new Random();
                    double randomValue = -1 + 2 * r.nextDouble();
                    sj.add("\"D"+operand+"\":    { \"type\": \"double_range\"  },");
                }
        );

        return sj.toString();

    }

    @Test
    public void testA(){
        assertEquals(923877283, DateTime.now());

    }
}
